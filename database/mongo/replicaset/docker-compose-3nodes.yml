version: "3.4"
services:
  # 标准的三节点副本集，自动进行副本集的初始化
  mongo1:
    container_name: mongo1
    image: mongo:4.2
    restart: always
    # wiredTigerCacheSizeGB 限制缓存上限（使用内存），注意要为别的功能预留部分内存。
    entrypoint: ["mongod", "--bind_ip_all", "--replSet=rs0", "--wiredTigerCacheSizeGB=2"]
    volumes:
      - ./mongo-data1:/data/db
    ports:
      - "27017:27017"
  mongo2:
    container_name: mongo2
    image: mongo:4.2
    restart: always
    entrypoint: ["mongod", "--bind_ip_all", "--replSet=rs0", "--wiredTigerCacheSizeGB=2"]
    volumes:
      - ./mongo-data2:/data/db
    ports:
      - "27018:27017"
  mongo3:
    container_name: mongo3
    image: mongo:4.2
    restart: always
    entrypoint: ["mongod", "--bind_ip_all", "--replSet=rs0", "--wiredTigerCacheSizeGB=2"]
    volumes:
      - ./mongo-data3:/data/db
    ports:
      - "27019:27017"
    # 利用 healthcheck 进行副本集的自动初始化
    healthcheck: # https://docs.docker.com/compose/compose-file/#healthcheck
      test:
        [
          "CMD",
          "mongo",
          "--eval",
          # 注意：下述命令中的 `mongo.db.local` 必须替换成正确可用的域名！并且客户端能正常解析！
          #如果没有私有 DNS 服务器/域名，建议将这三个域名修改成 `IP` 地址！
          # 这里不使用 docker 内部 DNS 名称的原因是，外部客户端无法解析该域名。这将导致外部客户端无法使用此 Mongo 副本集。
          'rs.initiate( { _id : "rs0",members: [{ _id: 0, host: "mongo.db.local:27017" },{ _id: 1, host: "mongo.db.local:27018" },{ _id: 2, host: "mongo.db.local:27019" }]  })',
        ]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
